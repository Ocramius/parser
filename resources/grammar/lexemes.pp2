
// Literals

%token  T_DQ_STRING_LITERAL     "([^"\\]*(?:\\.[^"\\]*)*)"
%token  T_SQ_STRING_LITERAL     '([^'\\]*(?:\\.[^'\\]*)*)'
%token  T_FLOAT_LITERAL         (?i)(?:-?[0-9]++\.[0-9]*+(?:e-?[0-9]++)?)|(?:-?[0-9]*+\.[0-9]++(?:e-?[0-9]++)?)|(?:-?[0-9]++e-?[0-9]++)
%token  T_INT_LITERAL           \-?(?i)(?:(?:0b[0-1_]++)|(?:0o[0-7_]++)|(?:0x[0-9a-f_]++)|(?:[0-9][0-9_]*+))
%token  T_BOOL_LITERAL          \b(?i)(?:true|false)\b
%token  T_NULL_LITERAL          \b(?i)(?:null)\b

// Name

%token  T_NAME                  [a-zA-Z_\x80-\xff][a-zA-Z0-9\-_\x80-\xff]*

// Special Chars

%token  T_ANGLE_BRACKET_OPEN    <
%token  T_ANGLE_BRACKET_CLOSE   >
%token  T_PARENTHESIS_OPEN      \(
%token  T_PARENTHESIS_CLOSE     \)
%token  T_BRACE_OPEN            \{
%token  T_BRACE_CLOSE           \}
%token  T_COMMA                 ,
%token  T_ELLIPSIS              \.\.\.
%token  T_DOUBLE_COLON          ::
%token  T_COLON                 :
%token  T_EQ                    =
%token  T_NS_DELIMITER          \\
%token  T_NULLABLE              \?
%token  T_NOT                   \!
%token  T_OR                    \|
%token  T_AND                   &
%token  T_ASTERISK              \*

// Other

%skip   T_WHITESPACE            \s+
%skip   T_BLOCK_COMMENT         \h*/\*.*?\*/\h*
