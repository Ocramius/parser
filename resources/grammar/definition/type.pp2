
// type iterable<out TKey: mixed, out TValue: mixed> = (
//     array<TKey, TValue> | Traversable<TKey, TValue>
// );

TypeDefinition -> {
    $type = $parameters = null;

    if (\end($children) instanceof Node\Type\TypeStatement) {
        $type = \array_pop($children);
    }

    if (\end($children) instanceof Node\Definition\Template\ParametersListNode) {
        $parameters = \array_pop($children);
    }

    return new Node\Definition\TypeDefinitionNode($children[0], $type, $parameters);
}
  : ::T_TYPE:: Identifier()
    TemplateParameterDefinitions()?
    (::T_ASSIGN:: Type())?
  ;

